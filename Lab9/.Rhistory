select(-GeoName) %>%
drop_na()
stategdp_v2$year <- as.numeric(stategdp_v2$year)
stategdp_v3 <- stategdp_v2 %>%
rename("Year" = "year",
"GDP" = "gdp")
state_gdp_emissions <- left_join(emissions_v2, stategdp_v3, by = c('State','Year'))
describe(state_gdp_emissions)
install.packages("Hmisc")
describe(state_gdp_emissions)
library(readxl)
library(tidyverse)
library(Hmisc)
describe(state_gdp_emissions)
View(state_gdp_emissions)
View(state_gdp_emissions)
View(stategdp_v3)
View(state_gdp_emissions)
View(state_gdp_emissions)
View(state_gdp_emissions)
ggplot(state_gdp_emissions,
aes(x=`GDP`,
y= `Year`)
)+
geom_point()
state_gdp_emissions |>
group_by(State) |>
ggplot(.,
aes(x=`GDP`,
y= `Year`)
)+
geom_point()
state_gdp_emissions |>
group_by(State) |>
ggplot(state_gdp_emissions,
aes(x=`GDP`,
y= `Year`)
)+
geom_point()
state_gdp_emissions |>
group_by(State) |>
ggplot(
aes(x=`GDP`,
y= `Year`)
)+
geom_point()
state_gdp_emissions |>
group_by(State) |>
ggplot(
aes(x=`GDP`,
y= `Year`)
)
ggplot(state_gdp_emissions, aes(x=Year, y=GDP, fill=State))+
geom_line()+
labs(title ="State GDP Over Time",
x="Year",
y= "GDP (in billions)")
ggplot(state_gdp_emissions, aes(x=Year, y=GDP, color=State))+
geom_line()+
labs(title ="State GDP Over Time",
x="Year",
y= "GDP (in billions)")
state_gdp_emissions <- state_gdp_emissions |>
drop_na()
View(emissions_v2)
2023-1998
ggplot(state_gdp_emissions, aes(x=Year, y=GDP, color=State))+
geom_line()+
labs(title ="State GDP Over Time",
x="Year",
y= "GDP (in billions)")
View(state_gdp_emissions)
View(state_gdp_emissions)
class(state_gdp_emissions$GDP)
options(scipen=999)
ggplot(state_gdp_emissions, aes(x=Year, y=GDP, color=State))+
geom_line()+
labs(title ="State GDP Over Time",
x="Year",
y= "GDP (in billions)")
ggplot(state_gdp_emissions, aes(x=Year, y=GDP, color=State))+
geom_line()+
labs(title ="State GDP Over Time",
x="Year",
y= "GDP (in billions)")+
theme(legend.position="none")
ggplot(state_gdp_emissions, aes(x=Year, y=`CO2
(Metric Tons)`, color=State))+
geom_line()+
labs(title ="State CO2 Emissions from Energy Production Over Time",
x="Year",
y= "CO2 Emissions (Metric Tons)")+
theme(legend.position="none")
state_gdp_emissions <- state_gdp_emissions |>
drop_na() |>
rename("CO2" = "CO2
(Metric Tons)")
state_gdp_emissions <- state_gdp_emissions |>
drop_na() |>
rename("CO2" = "CO2 (Metric Tons)")
glimpse(head(state_gdp_emissions))
state_gdp_emissions <- state_gdp_emissions |>
drop_na() |>
rename("CO2" = "CO2\r\n(Metric Tons)")
ggplot(state_gdp_emissions, aes(x=Year, y=`CO2`, color=State))+
geom_line()+
labs(title ="State CO2 Emissions from Energy Production Over Time",
x="Year",
y= "CO2 Emissions (Metric Tons)")+
theme(legend.position="none")
ggplot(state_gdp_emissions, aes(x=Year, y=`CO2`, color=State))+
geom_line()+
labs(title ="State CO2 Emissions from Energy Production Over Time",
x="Year",
y= "CO2 Emissions (Metric Tons)")
ggplot(state_gdp_emissions, aes(x=Year, y=`CO2`, color=State))+
geom_line()+
labs(title ="State CO2 Emissions from Energy Production Over Time",
x="Year",
y= "CO2 Emissions (Metric Tons)")
library(plotly)
library(ploty)
install.packages("plotly")
plot_ly(gdp_plot)
library(plotly)
plot_ly(gdp_plot)
gdp_plot<- ggplot(state_gdp_emissions, aes(x=Year, y=GDP, color=State))+
geom_line()+
labs(title ="State GDP Over Time",
x="Year",
y= "GDP (in billions)")+
theme(legend.position="none")
co2_plot <- ggplot(state_gdp_emissions, aes(x=Year, y=`CO2`, color=State))+
geom_line()+
labs(title ="State CO2 Emissions from Energy Production Over Time",
x="Year",
y= "CO2 Emissions (Metric Tons)")
plot_ly(gdp_plot)
ggplotly(gdp_plot)
ggplotly(co2_plot)
state_gdp_emissions |>
summarise(median_GDP = median(GDP),
mean_GDP = mean(GDP),
max_GDP = max(GDP),
nmax = sum(GDP == max(.$length)),
iqr = IQR(GDP),
sd = sd(GDP)
)
state_gdp_emissions |>
summarise(median_GDP = median(GDP),
mean_GDP = mean(GDP),
max_GDP = max(GDP),
nmax = sum(GDP == max(GDP$length)),
iqr = IQR(GDP),
sd = sd(GDP)
)
state_gdp_emissions |>
summarise(median_GDP = median(GDP),
mean_GDP = mean(GDP),
max_GDP = max(GDP),
iqr = IQR(GDP),
sd = sd(GDP)
)
state_gdp_emissions |>
summarise(median_CO2 = median(CO2),
mean_CO2 = mean(CO2),
max_CO2 = max(CO2),
iqr_CO2 = IQR(CO2),
sd_CO2 = sd(CO2)
)
count(unique(state_gdp_emissions$State))
length(unique(state_gdp_emissions$State))
options(scipen=999)
setwd("C:/Users/AGURKAS/OneDrive - Environmental Protection Agency (EPA)/Profile/Documents/Masters Program/CUNY/Statistics/Lab9")
library(tidyverse)
library(openintro)
library(GGally)
glimpse(evals)
?evals
library(tidyverse)
library(openintro)
library(GGally)
?eval
?evals
library(tidyverse)
library(openintro)
library(GGally)
library(ggplot2)
ggplot(data = evals, aes(x = score)) +
geom_histogram()
# Chunk 1: global_options
knitr::opts_chunk$set(eval = TRUE, message = FALSE, warning = FALSE)
# Chunk 2: load-packages
library(tidyverse)
library(openintro)
library(GGally)
library(ggplot2)
# Chunk 3
glimpse(evals)
ggplot(data = evals, aes(x = score)) +
geom_density()
View(evals)
evals %>%
summarise(median = median(score),
mean = mean(score),
max = max(score),
nmax = sum(score == max(.$score)),
iqr = IQR(score),
sd = sd(score)
)
ggplot(data = evals, aes(x = score)) +
geom_histogram()
evals %>%
summarise(median = median(score),
mean = mean(score),
max = max(score),
nmax = sum(score == max(.$score)),
min = min(score),
nmin = sum(score == min(.$score)),
iqr = IQR(score),
sd = sd(score)
)
ggplot(data = evals, aes(x = pic_outfit, y = bty_avg)) +
geom_point()
ggplot(data = evals, aes(x = bty_avg, y = score)) +
geom_point()
ggplot(data = evals, aes(x = pic_outfit, y = bty_avg)) +
geom_point()
ggplot(data = evals, aes(x = bty_avg, y = score)) +
geom_point()
ggplot(data = evals, aes(x = pic_outfit, y = bty_avg)) +
geom_point()
ggplot(data = evals, aes(x = pic_outfit, y = bty_avg, fill = pic_outfit)) +
geom_point()
ggplot(data = evals, aes(x = pic_outfit, y = bty_avg, color = pic_outfit)) +
geom_point()
ggplot(data = evals, aes(x = pic_outfit, y = bty_avg, color = pic_outfit))
ggplot(data = evals, aes(x = pic_outfit, y = bty_avg, color = pic_outfit))
ggplot(data = evals, aes(x = pic_outfit, y = bty_avg))
ggplot(data = evals, aes(x = pic_outfit, y = bty_avg)) +
geom_point()
ggplot(data = evals, aes(x = pic_outfit, y = bty_avg, color=pic_outfit)) +
geom_density()
ggplot(data = evals, aes(x = pic_outfit, y = bty_avg)) +
geom_density()
ggplot(data = evals, aes(x = pic_outfit, y = bty_avg, group=pic_outfit, color=pic_outfit)) +
geom_density()
View(evals)
ggplot(data = evals, aes(x = pic_outfit, y = bty_avg, group=pic_outfit, color=pic_outfit)) +
geom_density()
ggplot(data = evals, aes(y = bty_avg, group=pic_outfit, color=pic_outfit)) +
geom_density()
ggplot(data = evals, aes(x = bty_avg, group=pic_outfit, color=pic_outfit)) +
geom_density()
ggplot(data = evals, aes(x = bty_avg, group=pic_outfit, color=pic_outfit)) +
geom_point()
ggplot(data = evals, aes(x = bty_avg, y=bty_avg)) +
geom_point()
ggplot(data = evals, aes(x = age, y=bty_avg)) +
geom_point()
ggplot(data = evals, aes(x = age, y=bty_avg)) +
geom_point()+
abline()
ggplot(data = evals, aes(x = age, y=bty_avg)) +
geom_point()+
abline(a=age, b= bty_avg)
ggplot(data = evals, aes(x = age, y=bty_avg)) +
geom_point()+
geom_smooth()
ggplot(data = evals, aes(x = age, y=bty_avg)) +
geom_point()+
geom_smooth(method=lm)
ggplot(data = evals, aes(x = bty_avg, y = score)) +
geom_point()
View(evals)
ggplot(data = evals, aes(x = bty_avg, y = score)) +
geom_jitter()
ggplot(data = evals, aes(x = age, y=bty_avg)) +
geom_point()+
geom_smooth(method=lm)
m_bty <- lm(score ~ bty_avg, data = evals)
summary(m_bty)
ggplot(data = evals, aes(x = bty_avg, y = score)) +
geom_jitter()+
geom_smooth(method=lm)
?lm()
ggplot(data = evals, aes(x = bty_avg, y = score)) +
geom_jitter() +
geom_smooth(method = "lm", se = FALSE)
ggplot(data = m_bty, aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, linetype = "dashed") +
xlab("Fitted values") +
ylab("Residuals")
ggplot(data = m_bty, aes(x = .resid)) +
geom_histogram(bins = 25) +
xlab("Residuals")
ggplot(data = m_bty, aes(sample = .resid)) +
stat_qq()
ggplot(data = m_bty, aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, linetype = "dashed") +
xlab("Fitted values") +
ylab("Residuals")
ggplot(data = m_bty, aes(x = .resid)) +
geom_histogram(bins = 25) +
xlab("Residuals")
ggplot(data = m_bty, aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, linetype = "dashed") +
xlab("Fitted values") +
ylab("Residuals")
ggplot(data = m_bty, aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, linetype = "dashed") +
xlab("Fitted values") +
ylab("Residuals")
ggplot(data = m_bty, aes(x = .resid)) +
geom_histogram(bins = 25) +
xlab("Residuals")
ggplot(data = m_bty, aes(x = .resid)) +
geom_histogram(bins = 30) +
xlab("Residuals")
ggplot(data = m_bty, aes(x = .resid)) +
geom_histogram(bins = 25) +
xlab("Residuals")
ggplot(data = m_bty, aes(sample = .resid)) +
stat_qq()
ggplot(data = m_bty, aes(x = .resid)) +
geom_histogram(bins = 25) +
xlab("Residuals") +
geom_density()
ggplot(data = m_bty, aes(x = .resid)) +
geom_histogram(bins = 25) +
xlab("Residuals") +
(geom_density(col = "red"))
ggplot(data = m_bty, aes(x = .resid)) +
geom_density() +
xlab("Residuals")
ggplot(data = m_bty, aes(x = .resid)) +
geom_blank() +
geom_histogram(aes(y=..density..))
stat_function(fun = dnorm, args = c(mean = dqmean, sd = dqsd), col = "tomato")
ggplot(data = m_bty, aes(x = .resid)) +
geom_blank() +
geom_histogram(aes(y=..density..))+
stat_function(fun = dnorm, args = c(mean = dqmean, sd = dqsd), col = "tomato")+
xlab("Residuals")
ggplot(data = m_bty, aes(x = .resid)) +
geom_blank() +
geom_histogram(aes(y=..density..))+
# stat_function(fun = dnorm, args = c(mean = dqmean, sd = dqsd), col = "tomato")+
xlab("Residuals")
ggplot(data = m_bty, aes(x = .resid)) +
geom_blank() +
geom_histogram(aes(y=..density..))+
geom_density(col= "red")
# stat_function(fun = dnorm, args = c(mean = dqmean, sd = dqsd), col = "tomato")+
xlab("Residuals")
ggplot(data = m_bty, aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, linetype = "dashed") +
xlab("Fitted values") +
ylab("Residuals")
ggplot(data = m_bty, aes(sample = .resid)) +
stat_qq()
ggplot(data = m_bty, aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, linetype = "dashed") +
xlab("Fitted values") +
ylab("Residuals")
ggplot(data = m_bty, aes(sample = .resid)) +
stat_qq()
ggplot(data = evals, aes(x = bty_f1lower, y = bty_avg)) +
geom_point()
evals %>%
summarise(cor(bty_avg, bty_f1lower))
evals %>%
select(contains("bty")) %>%
ggpairs()
m_bty_gen <- lm(score ~ bty_avg + gender, data = evals)
summary(m_bty_gen)
m_bty_gen <- lm(score ~ bty_avg + gender, data = evals)
summary(m_bty_gen)
summary(m_bty)
m_bty_gen <- lm(score ~ bty_avg + gender, data = evals)
summary(m_bty_gen)
?summary()
6.48e-06
ggplot(data = m_bty_gen, aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, linetype = "dashed") +
xlab("Fitted values") +
ylab("Residuals")
ggplot(data = m_bty_gen, aes(x = .resid)) +
geom_blank() +
geom_histogram(aes(y=..density..))+
geom_density(col= "red")
xlab("Residuals")
ggplot(data = m_bty_gen, aes(sample = .resid)) +
stat_qq()
ggplot(data = m_bty, aes(sample = .resid)) +
stat_qq()
ggplot(data = m_bty_gen, aes(sample = .resid)) +
stat_qq()
m_bty_gen <- lm(score ~ bty_avg + gender, data = evals)
summary(m_bty_gen)
ggplot(data = m_bty_gen, aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, linetype = "dashed") +
xlab("Fitted values") +
ylab("Residuals")
ggplot(data = m_bty_gen, aes(x = .resid)) +
geom_blank() +
geom_histogram(aes(y=..density..))+
geom_density(col= "red")
xlab("Residuals")
ggplot(data = m_bty, aes(x = .resid)) +
geom_blank() +
geom_histogram(aes(y=..density..))+
geom_density(col= "red")
xlab("Residuals")
ggplot(data = evals, aes(x = bty_avg, y = score, color = pic_color)) +
geom_smooth(method = "lm", formula = y ~ x, se = FALSE)
ggplot(data = evals, aes(x = bty_avg, y = score, color = pic_color)) +
geom_smooth(method = "lm", formula = y ~ x, se = FALSE)
ggplot(data = evals, aes(x = bty_f1lower, y = bty_avg)) +
geom_point()
evals %>%
summarise(cor(bty_avg, bty_f1lower))
evals %>%
select(contains("bty")) %>%
ggpairs()
ggplot(data = evals, aes(x = bty_avg, y = score, color = pic_color)) +
geom_smooth(method = "lm", formula = y ~ x, se = FALSE)
\[
m_bty_pic_color <- lm(score ~ bty_avg + pic_color, data = evals)
summary(m_bty_pic_color)
m_bty_rank <- lm(score ~ bty_avg + rank, data = evals)
summary(m_bty_rank)
m_full <- lm(score ~ rank + gender + ethnicity + language + age + cls_perc_eval
+ cls_students + cls_level + cls_profs + cls_credits + bty_avg
+ pic_outfit + pic_color, data = evals)
summary(m_full)
View(evals)
View(evals)
?evals
m_full_v2 <- lm(score ~ rank + gender + ethnicity + language + age + cls_perc_eval
+ cls_students + cls_level + cls_credits + bty_avg
+ pic_outfit + pic_color, data = evals)
summary(m_full_v2)
m_full_v2 |>
pull(p.value)
?lm()
unique(evals$cls_profs)
summary(m_full)
library(broom)
tidy(lm_full_v2) |>
filter(p.value < 0.05)
tidy(m_full_v2) |>
filter(p.value < 0.05)
tidy(m_full_v2) |>
filter(p.value < 0.05) |>
pull(term)
m_full_v3 <- lm(score ~ gendermale + language + age + cls_perc_eval +
cls_credits + bty_avg + pic_color, data = evals)
m_full_v3 <- lm(score ~ gender + language + age + cls_perc_eval +
cls_credits + bty_avg + pic_color, data = evals)
summary(m_full_v3)
ggplot(data = m_full_v3, aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, linetype = "dashed") +
xlab("Fitted values") +
ylab("Residuals")
ggplot(data = m_full_v3, aes(x = .resid)) +
geom_blank() +
geom_histogram(aes(y=..density..))+
geom_density(col= "red")
xlab("Residuals")
ggplot(data = m_full_v3, aes(sample = .resid)) +
stat_qq()
ggplot(data = m_full_v3, aes(x = .resid)) +
geom_blank() +
geom_histogram(aes(y=..density..))+
geom_density(col= "red")
xlab("Residuals")
ggplot(data = m_full_v3, aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, linetype = "dashed") +
xlab("Fitted values") +
ylab("Residuals")
ggplot(data = m_full_v3, aes(x = .fitted, y = .resid)) +
geom_jitter() +
geom_hline(yintercept = 0, linetype = "dashed") +
xlab("Fitted values") +
ylab("Residuals")
ggplot(data = m_full_v3, aes(x = .resid)) +
geom_blank() +
geom_histogram(aes(y=..density..))+
geom_density(col= "red")
xlab("Residuals")
summary(m_full_v3)
predict.lm(m_full_v3)
predict.lm(m_full_v3,score)
summary(m_full_v3)
m_bty_gen <- lm(score ~ bty_avg + gender, data = evals)
summary(m_bty_gen)
ggplot(data = evals, aes(x = bty_avg, y = score, color = pic_color)) +
geom_smooth(method = "lm", formula = y ~ x, se = FALSE)
View(evals)
View(m_full_v3)
summary(m_full_v3)
