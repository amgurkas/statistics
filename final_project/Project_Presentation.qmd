---
title: "Data 606 Project"
author: "Alyssa Gurkas"
format: 
  revealjs:
    theme: simple
    transition: slide
editor: visual
---

## Can a larger Gross Domestic Product (GDP) indicate more CO2 Emissions?

This project will fit a model that uses GDP to predict CO2 emissions, exploring if there is a relationship between GDP and CO2 Emissions.

Alyssa Gurkas \| December 9, 2024

## Background

Carbon dioxide (CO2) is a type of greenhouse gas, known for trapping heat, that is emitted into the atmosphere from burning fossil fuels (like coal, oil, and natural gas), and other natural processes like wildfires or volcanic eruptions.

CO2 in the atmosphere warms the planet, and causes global warming (or climate change). Human dependence on fossil fuels raised CO2 levels in the atmosphere. According to NASA, CO2 content in the atmosphere increased by 50% in less than 200 years. [Source](https://climate.nasa.gov/vital-signs/carbon-dioxide/?intent=121)

```{r load-libraries, eval=TRUE}
library(readxl)
library(tidyverse)
library(Hmisc)
library(plotly)
library(infer)
library(htmlwidgets)
library(leaflet)
library(tigris)
```

```{r include=FALSE}
options(scipen=999)
```

```{r load-datasets, eval=TRUE}
emissions <- read_excel("emission_annual.xlsx")
stategdp <- read_excel("stategdp_summary.xlsx")
```

```{r data-transformation-emissions-data, eval=TRUE}
emissions_v2 <- emissions %>% 
  filter(`Year` >=1998,
         `Producer Type` == "Total Electric Power Industry",
         `Energy Source` == "All Sources",
         `State` != "US-TOTAL")

emissions_v3 <- emissions |> 
  filter(`Year` >=1998,
         `State` != "US-TOTAL")
  
```

```{r data-transformation-stategdp, eval=TRUE}
stategdp_v2 <- stategdp %>% 
  select(-GeoFips) %>% 
  pivot_longer(!GeoName, names_to = "year", values_to = "gdp") %>% 
  filter(`GeoName` != "United States") %>% 
  mutate(`State`= state.abb[match(`GeoName`,state.name)]) %>% 
  select(-GeoName) %>% 
  drop_na()

stategdp_v2$year <- as.numeric(stategdp_v2$year)

stategdp_v3 <- stategdp_v2 %>% 
  rename("Year" = "year",
         "GDP" = "gdp")
```

```{r data-transformation-join, eval=TRUE}
state_gdp_emissions <- left_join(stategdp_v3, emissions_v2, 
                                 by = c('State','Year'))

state_gdp_emissions <- state_gdp_emissions |> 
  drop_na() |> 
  rename("CO2" = "CO2\r\n(Metric Tons)")

state_gdp_emissions_v2 <- left_join(stategdp_v3, emissions_v3, 
                                 by = c('State','Year'))

state_gdp_emissions_v2 <- state_gdp_emissions_v2 |> 
  drop_na() |> 
  rename("CO2" = "CO2\r\n(Metric Tons)")
```

## Background Cont.

The U.S. Department of Energy prepares an annual Electric Power Report that includes information about energy production, sales, consumption of fossil fuels, environmental data, and other topics related to energy. Additionally, the U.S. Department of Commerce tracks state annual summary statistics which include GDP by state from years 1998-2023.

This project uses data from the Department of Energy's (DOE) Annual Electric Power Report and the U.S. Department of Commerce (DOC) State Annual Summary Statistics.

## Dataset Characteristics {.smaller}

Each row represents the respective state's annual energy usage and GDP for the reporting year. There are 1326 rows in the data set and eight columns.

-   Year
-   State
-   Producer Type
-   Energy Source
-   CO2 (Metric Tons)
-   SO2 (Metric Tons)
-   NOx (Metric Tons)
-   GDP

```{r data-transformation-energy-prod-class, include=FALSE}
energy_types <- unique(emissions$`Energy Source`)
producer_types <- unique(emissions$`Producer Type`)
```

## Data Exploration (Energy Production)

```{r renewable-classification, include=FALSE}
count_energy_source <- state_gdp_emissions_v2 %>% 
  group_by(`Energy Source`) %>% 
  count()

count_energy_source

count_producer_type <- state_gdp_emissions_v2 %>% 
  group_by(`Producer Type`) %>% 
  count()

count_producer_type

state_gdp_emissions_v2 <- state_gdp_emissions_v2 %>% 
  filter(`Producer Type` != "Total Electric Power Industry",
         `Energy Source` != "All Sources")
```

```{r energy-source-bar, fig.align='center'}
ggplot(state_gdp_emissions_v2, aes(x=`Energy Source`, 
                                   group = `Energy Source`))+
  geom_bar(fill="lightblue") +
  ggtitle("2023 Energy Production by Source in the U.S.")+
  xlab("Energy Source") +
  ylab("Count of Energy Source")+
  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1),
        plot.title = element_text(hjust=0.5))
```

## Data Exploration (Producer Type)

```{r producer-type-bar, eval=TRUE, fig.align='center'}

ggplot(state_gdp_emissions_v2, aes(x=`Producer Type`, 
                                   group = `Producer Type`))+
  geom_bar(fill="lightblue") +
  ggtitle("2023 Energy Producer by Type in the U.S.")+
  xlab("Energy Producer Type") +
  ylab("Count of Energy Producer")+
  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1),
        plot.title = element_text(hjust=0.5))

```

## Data Exploration (CO2 and GDP)

```{r CO2-GDP-eda-pt1, echo=TRUE}
summary(state_gdp_emissions$CO2)
summary(state_gdp_emissions$GDP)
```

## Data Exploration - CO2 Distribution

```{r CO2-hist-obj, eval=TRUE}

CO2_dist_plot <- ggplot(state_gdp_emissions, aes(x=CO2, 
                                                 fill=State))+
  geom_histogram(bins = 50)+
  xlab("CO2")+
  ylab("Count")+
  ggtitle("Distribution of CO2 Values")+
  theme(legend.position='none',
        plot.margin = margin(1, 1, 1, 1, "cm"))
```

```{r CO2-distr-plot,include=TRUE, fig.align='center'}
ggplotly(CO2_dist_plot)
```

## Data Exploration - GDP Distribution

```{r GDP-hist-obj, eval=TRUE}
GDP_dist_plot <- ggplot(state_gdp_emissions, aes(x=GDP, fill=State))+
  geom_histogram(bins=25)+
  xlab("GDP")+
  ylab("Count")+
  ggtitle("Distribution of GDP Values")+
  theme(legend.position = 'none',
         plot.margin = margin(.5, .5, .5, .5, "cm"))
```

```{r GDP-distr-plot, include=TRUE, fig.align='center'}
ggplotly(GDP_dist_plot)
```

## CO2 and GDP Relationship

To determine if there is a relationship between the CO2 emitted from energy production in the respective state, and the state GDP, a scatter plot can be used to visualize the linear relationship.

## CO2 and GDP Scatterplot

```{r CO2-GDP-scatterplot, include=FALSE}
scatterplot_CO2_GDP <- ggplot(state_gdp_emissions, aes(x=GDP , y=CO2, color=State)) +
   geom_jitter()+
    theme(legend.position = 'none',
         plot.margin = margin(.2, .2, .2, .2, "cm"))
```

```{r CO2-GDP-plotly, include=TRUE, fig.align='center'}
ggplotly(scatterplot_CO2_GDP)
```

## GDP and Year Scatterplot

```{r GDP-year-scatterplot, include=TRUE}
ggplot(data = state_gdp_emissions, aes(x = Year, y=GDP)) +
  geom_point()+
  geom_smooth(method=lm)
```

## CO2 and Year Scatterplot

```{r CO2-year-scatterplot, include=TRUE}
ggplot(data = state_gdp_emissions, aes(x = Year, y=CO2)) +
  geom_point()+
  geom_smooth(method=lm)
```

## Dealing with Skewness and Outliers

Texas and California seem to be outliers in this dataset. They have very large GDPs, and emit more CO2 than the other States. The data is also positively skewed. Due to this, a log transformation may be necessary to run a linear regression.

```{r m3-log, echo=TRUE, `code-line-numbers`="2-3|5|6"}
trans_state_gdp_emissions <- state_gdp_emissions |> 
  mutate(log_gdp = log(GDP),
         log_CO2 = log(CO2)) 

log_m1 <- lm(log_CO2 ~ log_gdp, data = trans_state_gdp_emissions)
log_m2 <- lm(log_CO2 ~ log_gdp + Year, data=trans_state_gdp_emissions)
```

```{r summary-models, include=FALSE}
summary(log_m1)
summary(log_m2)
```

## Scatterplot with Least Squares Line

```{r scatter-plot-log-m1, include=TRUE}
ggplot(trans_state_gdp_emissions, aes(x=log_gdp, y=log_CO2)) +
geom_point()+
stat_smooth(method="lm", se=FALSE)+
xlab("GDP (Log Transformation)")+
ylab("CO2 (Log Transformation)")
```

## Residuals Histogram Plot

```{r residuals-plot, include=TRUE}
ggplot(data = log_m1, aes(x = .resid)) +
  geom_histogram(bins = 30,
                 fill="cadetblue3") +
  xlab("Residuals")+
  ylab("Count")
```

## Residuals vs. Fitted (Predicted) Values

```{r residuals-vs-fitted, include=TRUE}
ggplot(data = log_m1, aes(x = .fitted, y = .resid)) +
  geom_point() +
  geom_hline(yintercept = 0, linetype = "dashed") +
  xlab("Fitted values") +
  ylab("Residuals")
```

## Residuals vs. Fitted (Predicted) Values with Curvature Test

```{r residual-plot-2, include=TRUE}
car::residualPlot(model=log_m1)
```

## Quantile-Quantile Plot

```{r qq-plot, include=TRUE}
ggplot(data = log_m1, aes(sample = .resid)) +
  stat_qq()+
  xlab("Theoretical Quantiles")+
  ylab("Sample Quantiles")
```

The non-linear Q-Q plot with the heavy tail indicates that there may be skewness in the residuals. This signals that the residuals are not normally distributed.

## Predict CA CO2 Emissions from the Model for 2023

```{r predict-CA-2023, echo=TRUE}
real_CA <- trans_state_gdp_emissions |> 
            filter(`Year` == 2023,
                   `State` =="CA")

real_CA$CO2 - exp(predict(log_m2, real_CA))
```

## Predict PA CO2 Emissions from the Model for 2023

```{r predict-PA-2023, echo=TRUE}
real_PA <- trans_state_gdp_emissions |> 
            filter(`Year` == 2023,
                   `State` =="PA")

(real_PA$CO2 - exp(predict(log_m2, real_PA)))/real_PA$CO2
```

## Predicted vs. Real Values for 2023

```{r creating-map, include=FALSE}
states <- states(cb=TRUE)

predict_2023 <- map_dfr(
  unique(trans_state_gdp_emissions$State),
  function(x) {
    d <- trans_state_gdp_emissions |> 
      filter(`Year` == 2023,
             `State` == x)
    
    r <- data.frame(
      State = x,
      CO2_Resid = (d$CO2 - exp(predict(log_m2,d)))/d$CO2
              )

    return(r)
    
  }
)

states <- merge(states, predict_2023, by.x = 'STUSPS', by.y ="State",all.x = F)
states <- states[!(states$NAME == 'Hawaii' | states$NAME == 'Alaska'), ]
states <- states |> 
  mutate(
    color = factor(case_when(abs(`CO2_Resid`) > 1 ~ "red",
                      abs(`CO2_Resid`) > .75 ~ "orange",
                      abs(`CO2_Resid`) > .4 ~ "yellow",
                      TRUE ~ "green"),
                      levels=c("red", "orange","yellow","green")
    )
  )

factorpal <- colorFactor(
  palette = c('red', 'orange', 'yellow', 'green'),
  domain = unique(states$color)
)

mytext <- paste(
  "State: ", states$NAME, "<br/>",
  "Relative Residual: ", round(states$CO2_Resid, digits=3), "<br/>",
  sep = ""
) %>%
  lapply(htmltools::HTML)

map <- leaflet(states) |> 
  addProviderTiles("CartoDB.Positron") |> 
  addPolygons(fillColor = ~factorpal(states$color),
              color = "black",
              weight = 0.5,
              label = mytext,
                  labelOptions = labelOptions(
                  style = list("font-weight" = "normal", padding = "3px 8px"),
                  textsize = "13px",
                  direction = "auto")) |> 
  setView(-98.5795, 39.8282, zoom=4)
```

```{r render-map, render=TRUE}
map
```

## References

1.  [DOC/BEA's GDP and Personal Income by State](https://www.bea.gov/itable/regional-gdp-and-personal-income) <br>
2.  [DOE/EIA's Electric Power Industry Esimated Emissions by State](https://www.eia.gov/electricity/data.php) <br>
3.  [Electric Power Annual Report](eia.gov/electricity/annual/pdf/epa.pdf)

## Additional Notes

**Producer Types (Business Classification)**: The EIA classifies Producer Types on page 227 of the Electric Power Annual 2023 Annual Report. On slide seven the Energy Producer Types were referenced.

<br>

**Energy Source**: The EIA defines renewable energy within the footnote section on page 33 of the Electric Power Annual 2023 Annual Report. On slide six Energy Sources were referenced.
